import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as s,o as n}from"./app-8WpY_j4n.js";const l={};function i(h,e){return n(),t("div",null,e[0]||(e[0]=[s('<h1 id="c-17特性汇总" tabindex="-1"><a class="header-anchor" href="#c-17特性汇总"><span>C++17特性汇总</span></a></h1><h2 id="构造函数模板推导" tabindex="-1"><a class="header-anchor" href="#构造函数模板推导"><span>构造函数模板推导</span></a></h2><h2 id="结构化绑定" tabindex="-1"><a class="header-anchor" href="#结构化绑定"><span>结构化绑定</span></a></h2><h2 id="if-switch语句初始化" tabindex="-1"><a class="header-anchor" href="#if-switch语句初始化"><span>if-switch语句初始化</span></a></h2><h2 id="内联变量" tabindex="-1"><a class="header-anchor" href="#内联变量"><span>内联变量</span></a></h2><h2 id="折叠表达式" tabindex="-1"><a class="header-anchor" href="#折叠表达式"><span>折叠表达式</span></a></h2><h2 id="constexpr-lambda表达式" tabindex="-1"><a class="header-anchor" href="#constexpr-lambda表达式"><span>constexpr lambda表达式</span></a></h2><h2 id="namespace嵌套" tabindex="-1"><a class="header-anchor" href="#namespace嵌套"><span>namespace嵌套</span></a></h2><h2 id="has-include预处理表达式" tabindex="-1"><a class="header-anchor" href="#has-include预处理表达式"><span>__has_include预处理表达式</span></a></h2><h2 id="在lambda表达式用-this捕获对象副本" tabindex="-1"><a class="header-anchor" href="#在lambda表达式用-this捕获对象副本"><span>在lambda表达式用*this捕获对象副本</span></a></h2><h2 id="新增attribute" tabindex="-1"><a class="header-anchor" href="#新增attribute"><span>新增Attribute</span></a></h2><h2 id="字符串转换" tabindex="-1"><a class="header-anchor" href="#字符串转换"><span>字符串转换</span></a></h2><h3 id="新增from-chars函数和to-chars函数" tabindex="-1"><a class="header-anchor" href="#新增from-chars函数和to-chars函数"><span>新增from_chars函数和to_chars函数</span></a></h3><h2 id="std-variant" tabindex="-1"><a class="header-anchor" href="#std-variant"><span>std::variant</span></a></h2><h2 id="std-optional" tabindex="-1"><a class="header-anchor" href="#std-optional"><span>std::optional</span></a></h2><h2 id="std-any" tabindex="-1"><a class="header-anchor" href="#std-any"><span>std::any</span></a></h2><h2 id="std-apply" tabindex="-1"><a class="header-anchor" href="#std-apply"><span>std::apply</span></a></h2><h2 id="std-make-from-tuple" tabindex="-1"><a class="header-anchor" href="#std-make-from-tuple"><span>std::make_from_tuple</span></a></h2><h2 id="std-string-view" tabindex="-1"><a class="header-anchor" href="#std-string-view"><span>std::string_view</span></a></h2><h2 id="std-as-const" tabindex="-1"><a class="header-anchor" href="#std-as-const"><span>std::as_const</span></a></h2><h2 id="file-system" tabindex="-1"><a class="header-anchor" href="#file-system"><span>file_system</span></a></h2><h2 id="std-shared-mutex" tabindex="-1"><a class="header-anchor" href="#std-shared-mutex"><span>std::shared_mutex</span></a></h2><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h2><p><a href="https://zhuanlan.zhihu.com/p/165640868" target="_blank" rel="noopener noreferrer">C++17新特性</a></p>',24)]))}const c=a(l,[["render",i],["__file","C__17特性汇总.html.vue"]]),o=JSON.parse('{"path":"/02.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.C__/C__17%E7%89%B9%E6%80%A7%E6%B1%87%E6%80%BB.html","title":"C++17特性汇总","lang":"zh-CN","frontmatter":{"title":"C++17特性汇总","date":"2024-09-20T00:00:00.000Z","order":1,"category":["C++"],"description":"C++17特性汇总 构造函数模板推导 结构化绑定 if-switch语句初始化 内联变量 折叠表达式 constexpr lambda表达式 namespace嵌套 __has_include预处理表达式 在lambda表达式用*this捕获对象副本 新增Attribute 字符串转换 新增from_chars函数和to_chars函数 std::va...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/02.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/02.C__/C__17%E7%89%B9%E6%80%A7%E6%B1%87%E6%80%BB.html"}],["meta",{"property":"og:site_name","content":"Mr.Li"}],["meta",{"property":"og:title","content":"C++17特性汇总"}],["meta",{"property":"og:description","content":"C++17特性汇总 构造函数模板推导 结构化绑定 if-switch语句初始化 内联变量 折叠表达式 constexpr lambda表达式 namespace嵌套 __has_include预处理表达式 在lambda表达式用*this捕获对象副本 新增Attribute 字符串转换 新增from_chars函数和to_chars函数 std::va..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-30T13:53:16.000Z"}],["meta",{"property":"article:author","content":"Mr.Li"}],["meta",{"property":"article:published_time","content":"2024-09-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-30T13:53:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C++17特性汇总\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-30T13:53:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Li\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"构造函数模板推导","slug":"构造函数模板推导","link":"#构造函数模板推导","children":[]},{"level":2,"title":"结构化绑定","slug":"结构化绑定","link":"#结构化绑定","children":[]},{"level":2,"title":"if-switch语句初始化","slug":"if-switch语句初始化","link":"#if-switch语句初始化","children":[]},{"level":2,"title":"内联变量","slug":"内联变量","link":"#内联变量","children":[]},{"level":2,"title":"折叠表达式","slug":"折叠表达式","link":"#折叠表达式","children":[]},{"level":2,"title":"constexpr lambda表达式","slug":"constexpr-lambda表达式","link":"#constexpr-lambda表达式","children":[]},{"level":2,"title":"namespace嵌套","slug":"namespace嵌套","link":"#namespace嵌套","children":[]},{"level":2,"title":"__has_include预处理表达式","slug":"has-include预处理表达式","link":"#has-include预处理表达式","children":[]},{"level":2,"title":"在lambda表达式用*this捕获对象副本","slug":"在lambda表达式用-this捕获对象副本","link":"#在lambda表达式用-this捕获对象副本","children":[]},{"level":2,"title":"新增Attribute","slug":"新增attribute","link":"#新增attribute","children":[]},{"level":2,"title":"字符串转换","slug":"字符串转换","link":"#字符串转换","children":[{"level":3,"title":"新增from_chars函数和to_chars函数","slug":"新增from-chars函数和to-chars函数","link":"#新增from-chars函数和to-chars函数","children":[]}]},{"level":2,"title":"std::variant","slug":"std-variant","link":"#std-variant","children":[]},{"level":2,"title":"std::optional","slug":"std-optional","link":"#std-optional","children":[]},{"level":2,"title":"std::any","slug":"std-any","link":"#std-any","children":[]},{"level":2,"title":"std::apply","slug":"std-apply","link":"#std-apply","children":[]},{"level":2,"title":"std::make_from_tuple","slug":"std-make-from-tuple","link":"#std-make-from-tuple","children":[]},{"level":2,"title":"std::string_view","slug":"std-string-view","link":"#std-string-view","children":[]},{"level":2,"title":"std::as_const","slug":"std-as-const","link":"#std-as-const","children":[]},{"level":2,"title":"file_system","slug":"file-system","link":"#file-system","children":[]},{"level":2,"title":"std::shared_mutex","slug":"std-shared-mutex","link":"#std-shared-mutex","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1730459239000,"updatedTime":1732974796000,"contributors":[{"name":"lyw","email":"806555632@qq.com","commits":2}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"02.编程语言/02.C++/C++17特性汇总.md","localizedDate":"2024年9月20日","excerpt":"\\n<h2>构造函数模板推导</h2>\\n<h2>结构化绑定</h2>\\n<h2>if-switch语句初始化</h2>\\n<h2>内联变量</h2>\\n<h2>折叠表达式</h2>\\n<h2>constexpr lambda表达式</h2>\\n<h2>namespace嵌套</h2>\\n<h2>__has_include预处理表达式</h2>\\n<h2>在lambda表达式用*this捕获对象副本</h2>\\n<h2>新增Attribute</h2>\\n<h2>字符串转换</h2>\\n<h3>新增from_chars函数和to_chars函数</h3>\\n<h2>std::variant</h2>\\n<h2>std::optional</h2>","autoDesc":true}');export{c as comp,o as data};
