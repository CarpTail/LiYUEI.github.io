import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as a,o as t}from"./app-CgyEwi_p.js";const n="/assets/images/glad.png",g={};function r(o,e){return t(),l("div",null,e[0]||(e[0]=[a('<h1 id="如何在imgui中集成glad" tabindex="-1"><a class="header-anchor" href="#如何在imgui中集成glad"><span>如何在imgui中集成glad</span></a></h1><p>本人之前学习了<a href="https://github.com/JoeyDeVries/LearnOpenGL" target="_blank" rel="noopener noreferrer">learnopengl</a>，该仓库使用了glad+glfw来作为OpenGL 例子的环境。后续又接触到了<a href="https://github.com/ocornut/imgui" target="_blank" rel="noopener noreferrer">imgui</a>，该图形库支持使用 glfw win32 android sdl2/3等窗口环境，还支持OpenGL、vulkan、dx9/11/12等API，进行即时gui界面渲染， imgui用于一些图形引擎的测试十分方便。所有，计划使用imgui构建自己的图形测试界面，实时调参。</p><h2 id="关于glad-glfw-和-imgui" tabindex="-1"><a class="header-anchor" href="#关于glad-glfw-和-imgui"><span>关于glad, glfw 和 imgui</span></a></h2><p>首先，稍微介绍一下glad，glfw和glew。</p><h3 id="glad" tabindex="-1"><a class="header-anchor" href="#glad"><span><strong>glad</strong></span></a></h3><p>glad 是一个用于加载 OpenGL 函数指针的库，类似于 GLEW，但它更现代化和灵活。Glad 的主要特点包括：</p><ul><li>多语言支持：Glad 支持多种编程语言，包括 C、C++、D、Rust 等。</li><li>在线生成器：Glad 提供了一个在线服务，用户可以根据需要选择 OpenGL 版本和扩展，然后生成相应的加载器代码。</li><li>轻量级：Glad 生成的代码非常小巧，仅包含必要的函数指针和定义。</li><li>易于集成：Glad 生成的代码可以直接包含在项目中，无需额外的库文件。</li></ul><p>使用 Glad 的步骤通常如下：</p><ol><li>访问 <a href="https://glad.dav1d.de/" target="_blank" rel="noopener noreferrer">Glad 在线生成器</a>。</li><li>选择配置：选择语言（如 C/C++），指定 OpenGL 版本和所需的扩展。</li><li>生成代码：点击生成按钮，下载生成的代码文件。</li><li>集成到项目中：将生成的头文件和源文件添加到项目中，并在代码中包含<code>glad.h</code>。</li></ol><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="glfw" tabindex="-1"><a class="header-anchor" href="#glfw"><span><strong>glfw</strong></span></a></h3><p>GLFW 是一个用于创建窗口、上下文和处理输入的开源跨平台库，主要用于 OpenGL、OpenGL ES 和 Vulkan 开发。以下是 GLFW 的一些主要特点：</p><ul><li><strong>跨平台支持</strong>：GLFW 支持 Windows、macOS 和 Linux（包括 Wayland 和 X11）。</li><li><strong>简单的API</strong>：提供了一个简单的 API 来创建窗口和上下文，并处理输入和事件。</li><li><strong>多窗口和多监视器支持</strong>：可以轻松管理多个窗口和监视器。</li><li><strong>高DPI支持</strong>：支持高分辨率显示器。</li><li><strong>输入处理</strong>：支持键盘、鼠标、游戏手柄等输入设备，并提供回调函数来处理输入事件。</li></ul><p>可从<a href="https://www.glfw.org/download" target="_blank" rel="noopener noreferrer">GLFW 官方网站</a>下载或者从 <a href="https://github.com/glfw/glfw" target="_blank" rel="noopener noreferrer">GitHub仓库</a>源码编译获取glfw库。</p><h3 id="imgui" tabindex="-1"><a class="header-anchor" href="#imgui"><span><strong>imgui</strong></span></a></h3><p>参见<a href="https://github.com/ocornut/imgui" target="_blank" rel="noopener noreferrer">Dear ImGui</a>仓库的介绍。</p><h2 id="集成imgui-glfw-opengl3" tabindex="-1"><a class="header-anchor" href="#集成imgui-glfw-opengl3"><span>集成imgui(glfw + opengl3)</span></a></h2><p>TODO</p><h2 id="动态库集成修改" tabindex="-1"><a class="header-anchor" href="#动态库集成修改"><span>动态库集成修改</span></a></h2><p>TODO</p>',20)]))}const s=i(g,[["render",r],["__file","如何在imgui中集成glad.html.vue"]]),m=JSON.parse('{"path":"/04.%E4%BB%A3%E7%A0%81%E5%BA%93%E7%A0%94%E7%A9%B6/OpenGL/%E5%A6%82%E4%BD%95%E5%9C%A8imgui%E4%B8%AD%E9%9B%86%E6%88%90glad.html","title":"如何在imgui中集成glad","lang":"zh-CN","frontmatter":{"title":"如何在imgui中集成glad","date":"2024-09-04T00:00:00.000Z","order":1,"category":["代码库,原创"],"tag":["OpenGL,imgui,glad,glfw"],"description":"如何在imgui中集成glad 本人之前学习了learnopengl，该仓库使用了glad+glfw来作为OpenGL 例子的环境。后续又接触到了imgui，该图形库支持使用 glfw win32 android sdl2/3等窗口环境，还支持OpenGL、vulkan、dx9/11/12等API，进行即时gui界面渲染， imgui用于一些图形引擎的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/04.%E4%BB%A3%E7%A0%81%E5%BA%93%E7%A0%94%E7%A9%B6/OpenGL/%E5%A6%82%E4%BD%95%E5%9C%A8imgui%E4%B8%AD%E9%9B%86%E6%88%90glad.html"}],["meta",{"property":"og:site_name","content":"Mr.Li"}],["meta",{"property":"og:title","content":"如何在imgui中集成glad"}],["meta",{"property":"og:description","content":"如何在imgui中集成glad 本人之前学习了learnopengl，该仓库使用了glad+glfw来作为OpenGL 例子的环境。后续又接触到了imgui，该图形库支持使用 glfw win32 android sdl2/3等窗口环境，还支持OpenGL、vulkan、dx9/11/12等API，进行即时gui界面渲染， imgui用于一些图形引擎的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/glad.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-19T06:54:19.000Z"}],["meta",{"property":"article:author","content":"Mr.Li"}],["meta",{"property":"article:tag","content":"OpenGL,imgui,glad,glfw"}],["meta",{"property":"article:published_time","content":"2024-09-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-19T06:54:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何在imgui中集成glad\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/glad.png\\"],\\"datePublished\\":\\"2024-09-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-19T06:54:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Li\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"关于glad, glfw 和 imgui","slug":"关于glad-glfw-和-imgui","link":"#关于glad-glfw-和-imgui","children":[{"level":3,"title":"glad","slug":"glad","link":"#glad","children":[]},{"level":3,"title":"glfw","slug":"glfw","link":"#glfw","children":[]},{"level":3,"title":"imgui","slug":"imgui","link":"#imgui","children":[]}]},{"level":2,"title":"集成imgui(glfw + opengl3)","slug":"集成imgui-glfw-opengl3","link":"#集成imgui-glfw-opengl3","children":[]},{"level":2,"title":"动态库集成修改","slug":"动态库集成修改","link":"#动态库集成修改","children":[]}],"git":{"createdTime":1726728859000,"updatedTime":1726728859000,"contributors":[{"name":"lyw","email":"806555632@qq.com","commits":1}]},"readingTime":{"minutes":2.1,"words":630},"filePathRelative":"04.代码库研究/OpenGL/如何在imgui中集成glad.md","localizedDate":"2024年9月4日","excerpt":"\\n<p>本人之前学习了<a href=\\"https://github.com/JoeyDeVries/LearnOpenGL\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">learnopengl</a>，该仓库使用了glad+glfw来作为OpenGL\\n例子的环境。后续又接触到了<a href=\\"https://github.com/ocornut/imgui\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">imgui</a>，该图形库支持使用\\nglfw win32 android sdl2/3等窗口环境，还支持OpenGL、vulkan、dx9/11/12等API，进行即时gui界面渲染，\\nimgui用于一些图形引擎的测试十分方便。所有，计划使用imgui构建自己的图形测试界面，实时调参。</p>","autoDesc":true}');export{s as comp,m as data};
